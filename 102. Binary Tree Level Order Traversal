/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution
{
public List<List<Integer>> levelOrder(TreeNode root)
{
List<List<Integer>> traversal = new ArrayList<>();

if (root == null)
return traversal;

ArrayList<TreeNode> queue = new ArrayList<>();
queue.add(root);

while (queue.size() != 0)
{
List<Integer> nodes = new ArrayList<>();
int level = queue.size();

for (int i = 0; i < level; i++)
{
TreeNode node = queue.get(0);

if (node.left != null)
queue.add(node.left);

if (node.right != null)
queue.add(node.right);

nodes.add(queue.remove(0).val);
}

traversal.add(nodes);
}

return traversal;
}
}
